package nettysocketserver;

import io.netty.channel.ChannelHandlerContext;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Timer;
import java.util.TimerTask;
import org.json.JSONObject;

public class User {
    
    ChannelHandlerContext nbc;
    String username = "";
    String alt_username = "";
    String user_username = "";
    String password;
    String email;
    String session_id;
    Boolean administrate;
    String ip_address;
    String nbc_address;
    String user_agent;
    String db_id;
    String capabilities;
    float latitude = 0;
    float longitude = 0;
    int id = 0;
    int admin = 0;
    int admin_status = 0;
    int judge = 0;
    int adjudicator = 0;
    int ban_status = 0;
    int customs = 0;
    int default_customs = 0;
    int donator = 0;
    int moderator = 0;
    int beginner = 0;
    String currentGroup = "";
    int currentGroupId = 0;
    String default_deck = "";
    Boolean frozen = false;
    Boolean banned = false;
    Boolean muted = false;
    Boolean postedStatusRecently = false;
    Boolean postedReplyRecently = false;
    int activated = 0;
    int disabled = 0;
    int expert = 0;
    String pic = "";
    int pic_id = 0;
    String default_pic = "";
    int nsfw = 0;
    String sleeve = "";
    int html = 0;
    String timezone = "-05:00";
    String gender = "";
    String orientation = "";
    ArrayList<String> announcement = new ArrayList<String>();
    ArrayList<String> following = new ArrayList<String>();
    ArrayList<String> friends = new ArrayList<String>();
    ArrayList<String> sentFriendRequests = new ArrayList<String>();
    ArrayList<String> receivedFriendRequests = new ArrayList<String>();
    ArrayList<String> blocked = new ArrayList<String>();
    ArrayList<String> blockedByYou = new ArrayList<String>();
    ArrayList<String> privateChatUsernames = new ArrayList<String>();
    ArrayList<Integer> privateChatLimits = new ArrayList<Integer>();
    ArrayList<String> newFriendRequests = new ArrayList<String>();
    ArrayList<JSONObject> groups = new ArrayList<JSONObject>();
    ArrayList<JSONObject> groupUsers = new ArrayList<JSONObject>();
    int simple = 0;
    int allow_comments = 1;
    int allow_comments_friends_only = 1;
    int require_comment_approval = 0;
    int allow_messages = 1;
    int allow_offline_messages = 1;
    int auto_load_messages = 1;
    int auto_close_notifications = 0;
    int message_friends_only = 0;
    int allow_added_to_groups = 2;
    int always_play_profile_song = 0;
    int always_show_nsfw = 0;
    int show_distance = 1;
    int show_location = 1;
    int remember_me = 1;
    int _remember_me = 1;
    String resolution = "medium";
    int match_rating = 0;
    int match_experience = 0;
    int single_rating = 0;
    int single_experience = 0;
    ArrayList<JSONObject> decks = new ArrayList<JSONObject>();
    int newComments = 0;
    String loginDate = "";
    int group_id = 0;
    int lastHeardAnnouncement = 0;
    int paypal_attempts = 0;
    Duel duel;
    int duel_id;
    int last_duel_id;
    int consecutive_wins = 0;
    String registered = "";
    String city = "";
    String region = "";
    String country = "";
    String country_code = "";
    String zip_code = "";
    String location = "";
    String profile_txt = "";
    String judge_profile_txt = "";
    int html_txt = 0;
    int views = 0;
    String languages = "";
    int match_wins = 0;
    int single_wins = 0;
    int match_losses = 0;
    int single_losses = 0;
    int match_draws = 0;
    int single_draws = 0;
    String facebook = "";
    String youtube = "";
    String twitter = "";
    String instagram = "";
    String skype = "";
    String discord = "";
    String snapchat = "";
    String kik = "";
    String tumblr = "";
    String twitch = "";
    String steam = "";
    String duel_links = "";
    JSONObject song = new JSONObject();
    //ArrayList<Friend> friends_arr = new ArrayList<Friend>();
    ArrayList<String> pics = new ArrayList<String>();
    ArrayList<Integer> ids = new ArrayList<Integer>();
    ArrayList<Integer> nsfws = new ArrayList<Integer>();
    //ArrayList<Comment> comments = new ArrayList<Comment>();
    //ArrayList<Comment> testimonials = new ArrayList<Comment>();
    ArrayList<Timestamp> previous_calls = new ArrayList<Timestamp>();
    
    Boolean updateBlocked = true;
    Boolean updateFriendRequests = true;
            Boolean updateSeenFriendRequests = false;
    Boolean updateUnseenMessages = true; // was true, then false // currently serves no purpose
    Boolean updateUnseenComments = true; // was true, then false
        Boolean updateProfileSong = true;
        Boolean updateExtraPictures = true;
    Boolean updateFriends = true;
    Boolean updateComments = true;
    Boolean updateGroups = true;
    Boolean updateTestimonials = true; // serves no purpose
    Boolean updateUser = true;
    
    int publicChatLimit = 0;
    String lastViewedProfile = "";
    int total_comments = 0;
    int total_testimonials = 0;
    String lastAutoCompleteString = "";
    ArrayList<String> previous_opponents = new ArrayList<String>();
    ArrayList<String> previous_ips = new ArrayList<String>();
    ArrayList<String> previous_nbc_ips = new ArrayList<String>();
    ArrayList<String> previous_db_ids = new ArrayList<String>();
    ArrayList<String> previous_views = new ArrayList<String>();
    int muteSeconds;
    int seconds = 0;
    Timestamp timeout_timestamp;
    Timestamp connection_timestamp;
    Timestamp connect_timestamp;
    Timestamp logout_timestamp;
    String tag;
    String lastPublicMessage = "";
    Boolean defragmenting = false;
    String lastDataString = "";
    int ignored = 0;
    ArrayList<JSONObject> actions = new ArrayList<JSONObject>();
    ArrayList<String> plays = new ArrayList<String>();
    String deck_status = "";
    int version = 0;
    int bot = 0;
    String cs = "";
    String line = "";
    Boolean greeted;
    double cpd;
    Boolean answering_call = false;
    String lastPlay = "";
    Timestamp lastPlayTimestamp = new Timestamp(System.currentTimeMillis());
    String action = "";
    String error = "";
    Timestamp muted_timestamp = null;
    Boolean firstLogin = false;
    Timestamp join_date;
    int rating_test_duel_id = 0;
    String rating_line = "";
    String rating_test_result = "";
    Boolean verified = false;
    int times_verified = 0;
    String lastAction = "";
    Boolean cards_loaded = false;
    Boolean inPool = false;
    String freeze_ip;
    String watch_password = "";
    String duel_password = "";
    
    Boolean login_complete = false;
    Boolean following_loaded = false;
    Boolean decks_loaded = false;
    Boolean friends_loaded = false;
    Boolean blocked_loaded = false;
    Boolean friend_requests_loaded = false;
    Boolean useen_comments_loaded = false;
    Boolean unseen_messages_loaded = false;
    Boolean groups_loaded = false;
    Boolean everything_else_loaded = false;
    
    long db_millis = 0;
    long login_millis = 0;
    long following_millis = 0;
    long deck_millis = 0;
    long friends_millis = 0;
    long blocked_millis = 0;
    long requests_millis = 0;
    long unseen_comments_millis = 0;
    long unseen_messages_millis = 0;
    long groups_millis = 0;
    long cpd_millis = 0;
    long connecting_millis = 0;
    
    Boolean online = true;
    int login_id = 0;
    int times_online = 0;
    long connect_time = 0;
    int times_lost_connection = 0;
    
    int deck;
    String deck_name;
    String duel_type;
    String duel_rules;
    String duel_language = "English";
    String duel_format;
    Boolean waiting;
    int rating;
    int experience;
    Boolean standby = true;
    Boolean ready = false;
    Boolean finished = false;
    User opponent;
    int leeway = 0;
    ArrayList<User> good_choices = new ArrayList<User>();
    int assignedAt = 0;
    int pool_seconds = 0;
    Boolean has_watch_password = false;
    String duel_note = "";
    String watch_note = "";
    Boolean links = true;
    ArrayList<User> joiners = new ArrayList<User>();
    Boolean allow_watching;
    String log = "";
    Boolean dn_client = false;
    Boolean connecting = false;
    Boolean lost_connection = false;
    Timestamp lost_connection_timestamp;
    String order;
    String deck_legality;
    
    public User() {
        init();
    }
    
    public void init() {
        nbc = null;
        username = "";
        alt_username = "";
        user_username = "";
        password = null;
        email = null;
        session_id = null;
        administrate = null;
        ip_address = null;
        nbc_address = null;
        user_agent = null;
        db_id = null;
        capabilities = null;
        float latitude = 0;
        float longitude = 0;
        id = 0;
        admin = 0;
        admin_status = 0;
        judge = 0;
        adjudicator = 0;
        ban_status = 0;
        customs = 0;
        default_customs = 0;
        donator = 0;
        moderator = 0;
        beginner = 0;
        currentGroup = "";
        currentGroupId = 0;
        default_deck = "";
        frozen = false;
        banned = false;
        muted = false;
        postedStatusRecently = false;
        postedReplyRecently = false;
        activated = 0;
        disabled = 0;
        expert = 0;
        pic = "";
        pic_id = 0;
        default_pic = "";
        nsfw = 0;
        sleeve = "";
        html = 0;
        timezone = "-05:00";
        gender = "";
        orientation = "";
        announcement.clear();
        following.clear();
        friends.clear();
        sentFriendRequests.clear();
        receivedFriendRequests.clear();
        blocked.clear();
        blockedByYou.clear();
        privateChatUsernames.clear();
        privateChatLimits.clear();
        newFriendRequests.clear();
        groups.clear();
        groupUsers.clear();
        simple = 0;
        allow_comments = 1;
        allow_comments_friends_only = 1;
        require_comment_approval = 0;
        allow_messages = 1;
        allow_offline_messages = 1;
        auto_load_messages = 1;
        auto_close_notifications = 0;
        message_friends_only = 0;
        allow_added_to_groups = 2;
        always_play_profile_song = 0;
        always_show_nsfw = 0;
        show_distance = 1;
        show_location = 1;
        remember_me = 1;
        _remember_me = 1;
        resolution = "medium";
        match_rating = 0;
        match_experience = 0;
        single_rating = 0;
        single_experience = 0;
        decks.clear();
        newComments = 0;
        loginDate = "";
        group_id = 0;
        lastHeardAnnouncement = 0;
        paypal_attempts = 0;
        duel = null;
        duel_id = 0;
        last_duel_id = 0;
        consecutive_wins = 0;
        registered = "";
        city = "";
        region = "";
        country = "";
        country_code = "";
        zip_code = "";
        location = "";
        profile_txt = "";
        judge_profile_txt = "";
        html_txt = 0;
        views = 0;
        languages = "";
        match_wins = 0;
        single_wins = 0;
        match_losses = 0;
        single_losses = 0;
        match_draws = 0;
        single_draws = 0;
        facebook = "";
        youtube = "";
        twitter = "";
        instagram = "";
        skype = "";
        discord = "";
        snapchat = "";
        kik = "";
        tumblr = "";
        twitch = "";
        steam = "";
        duel_links = "";
        song = new JSONObject();
        //friends_arr.clear();
        pics.clear();
        ids.clear();
        nsfws.clear();
        //comments.clear();
        //testimonials.clear();
        previous_calls.clear();

        updateBlocked = true;
        updateFriendRequests = true;
                updateSeenFriendRequests = false;
        updateUnseenMessages = true; // was true, then false // currently serves no purpose
        updateUnseenComments = true; // was true, then false
            updateProfileSong = true;
            updateExtraPictures = true;
        updateFriends = true;
        updateComments = true;
        updateGroups = true;
        updateTestimonials = true; // serves no purpose
        updateUser = true;

        publicChatLimit = 0;
        lastViewedProfile = "";
        total_comments = 0;
        total_testimonials = 0;
        lastAutoCompleteString = "";
        previous_opponents.clear();
        previous_ips.clear();
        previous_nbc_ips.clear();
        previous_db_ids.clear();
        previous_views.clear();
        muteSeconds = 0;
        seconds = 0;
        timeout_timestamp = null;
        connection_timestamp = null;
        connect_timestamp = null;
        logout_timestamp = null;
        tag = null;
        lastPublicMessage = "";
        defragmenting = false;
        lastDataString = "";
        ignored = 0;
        actions.clear();
        plays.clear();
        deck_status = "";
        version = 0;
        bot = 0;
        cs = "";
        line = "";
        greeted = false;
        cpd = 0;
        answering_call = false;
        lastPlay = "";
        lastPlayTimestamp = new Timestamp(System.currentTimeMillis());
        action = "";
        error = "";
        muted_timestamp = null;
        firstLogin = false;
        join_date = null;
        rating_test_duel_id = 0;
        rating_line = "";
        rating_test_result = "";
        verified = false;
        times_verified = 0;
        lastAction = "";
        cards_loaded = false;
        inPool = false;
        freeze_ip = null;
        watch_password = "";
        duel_password = "";

        login_complete = false;
        following_loaded = false;
        decks_loaded = false;
        friends_loaded = false;
        blocked_loaded = false;
        friend_requests_loaded = false;
        useen_comments_loaded = false;
        unseen_messages_loaded = false;
        groups_loaded = false;
        everything_else_loaded = false;

        db_millis = 0;
        login_millis = 0;
        following_millis = 0;
        deck_millis = 0;
        friends_millis = 0;
        blocked_millis = 0;
        requests_millis = 0;
        unseen_comments_millis = 0;
        unseen_messages_millis = 0;
        groups_millis = 0;
        cpd_millis = 0;
        connecting_millis = 0;

        online = false;
        login_id = 0;
        times_online = 0;
        connect_time = 0;
        times_lost_connection = 0;

        deck = 0;
        deck_name = null;
        duel_type = null;
        duel_rules = null;
        duel_language = "English";
        duel_format = null;
        waiting = false;
        rating = 0;
        experience = 0;
        standby = true;
        ready = false;
        finished = false;
        opponent = null;
        leeway = 0;
        good_choices.clear();
        assignedAt = 0;
        pool_seconds = 0;
        has_watch_password = false;
        duel_note = "";
        watch_note = "";
        links = true;
        joiners.clear();
        allow_watching = false;
        log = "";
        dn_client = false;
        connecting = false;
        lost_connection = false;
        lost_connection_timestamp = null;
        order = null;
        deck_legality = null;
    }
}